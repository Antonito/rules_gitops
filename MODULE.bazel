module(
    name = "rules_gitops",
    version = "0.50.0",
)

bazel_dep(name = "aspect_bazel_lib", version = "1.39.0")
bazel_dep(name = "bazel_skylib", version = "1.5.0")
bazel_dep(name = "platforms", version = "0.0.7")
bazel_dep(name = "rules_oci", version = "1.5.1")
bazel_dep(name = "rules_pkg", version = "0.7.0")
bazel_dep(name = "rules_go", version = "0.44.0", repo_name = "io_bazel_rules_go")

go_sdk = use_extension("@io_bazel_rules_go//go:extensions.bzl", "go_sdk")
go_sdk.download(version = "1.21.5")

bazel_dep(name = "gazelle", version = "0.35.0", repo_name = "bazel_gazelle")

go_deps = use_extension("@bazel_gazelle//:extensions.bzl", "go_deps")
go_deps.from_file(go_mod = "//:go.mod")
use_repo(
    go_deps,
    "com_github_ghodss_yaml",
    "com_github_golang_protobuf",
    "com_github_google_go_cmp",
    "com_github_google_go_github_v32",
    "com_github_xanzy_go_gitlab",
    "io_k8s_api",
    "io_k8s_apimachinery",
    "io_k8s_client_go",
    "org_golang_x_oauth2",
)

toolchains = use_extension(
    "@rules_gitops//gitops:extensions.bzl",
    "toolchains",
)
toolchains.kustomize()
use_repo(toolchains, "kustomize_bin", "kustomize_toolchains")

register_toolchains("@kustomize_toolchains//:all")

# repo_rule = use_repo_rule("@rules_gitops//skylib/kustomize:kustomize.bzl", "download_binary")
# repo_rule(name = "kustomize_bin")

kubeconfig = use_repo_rule("@rules_gitops//skylib:k8s.bzl", "kubeconfig")

kubeconfig(
    name = "k8s_test",
    cluster = "mycluster",
    use_host_config = True,
)

# toolchain = use_extension(
#     "@rules_gitops//gitops:extensions.bzl",
#     "kustomize",
# )

# toolchain.kustomize()

bazel_dep(name = "buildifier_prebuilt", version = "6.4.0", dev_dependency = True)
