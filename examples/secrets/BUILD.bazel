load("@aspect_bazel_lib//lib:write_source_files.bzl", "write_source_files")
load("@rules_gitops//gitops:defs.bzl", "external_image", "k8s_deploy")

# prepare two environments: it and mynamespace. Each environment will have its own secret
# the secret with name secret-object-name is defined in the {it|mynamespace}/secrets/secret-object-name directories
# the secret name is the name of the directory in the secrets directory
# the secret key is the name of the file
# the secret value is the content of the file
#
# WARNING: rules_gitops secrets are intended to use in tests and development only.
# DO NOT USE THIS IN PRODUCTION!
# the secret value is not encrypted. It is recommended to use a secret management tool like vault or gcp secret manager

external_image(
    name = "image",
    digest = "sha:1234567890",
    image = "gcr.io/repo/someimage:thetag",
)

[
    k8s_deploy(
        name = ENV + "-server",
        cluster = CLUSTER,
        configmaps_renaming = "hash",  # add a hash to the configmap and secret names
        images = [
            ":image",
        ],
        manifests = glob(["*.yaml"]),  # we will use deployment.yaml to demonstrate a secret injection
        namespace = ENV,
        secrets_srcs = glob([ENV + "/secrets/**/*"]),
    )
    for (ENV, CLUSTER) in [
        ("it", "it-cluster"),
        ("mynamespace", "dev-cluster"),
    ]
]

# test expected transformation results.
write_source_files(
    name = "expected_results",
    files = {
        # Do not use .yaml extension for the expected results files to avoid picking up by the k8s_deploy's glob()
        "it_expected.txt": ":it-server",
        "mynamespace_expected.txt": ":mynamespace-server",
    },
)
